//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ColorStateComponent colorState { get { return (ColorStateComponent)GetComponent(GameComponentsLookup.ColorState); } }
    public bool hasColorState { get { return HasComponent(GameComponentsLookup.ColorState); } }

    public void AddColorState(int newValue) {
        var index = GameComponentsLookup.ColorState;
        var component = (ColorStateComponent)CreateComponent(index, typeof(ColorStateComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceColorState(int newValue) {
        var index = GameComponentsLookup.ColorState;
        var component = (ColorStateComponent)CreateComponent(index, typeof(ColorStateComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveColorState() {
        RemoveComponent(GameComponentsLookup.ColorState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherColorState;

    public static Entitas.IMatcher<GameEntity> ColorState {
        get {
            if (_matcherColorState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ColorState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherColorState = matcher;
            }

            return _matcherColorState;
        }
    }
}
